/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as DashboardRouteImport } from './pages/dashboard'
import { Route as AuthRouteImport } from './pages/auth'
import { Route as WwwRouteImport } from './pages/_www'
import { Route as DashboardIndexRouteImport } from './pages/dashboard/index'
import { Route as WwwIndexRouteImport } from './pages/_www/index'
import { Route as AuthRegisterRouteImport } from './pages/auth/register'
import { Route as AuthLoginRouteImport } from './pages/auth/login'
import { Route as DashboardProjectIdIndexRouteImport } from './pages/dashboard/$projectId/index'

const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRouteImport,
} as any)
const WwwRoute = WwwRouteImport.update({
  id: '/_www',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)
const WwwIndexRoute = WwwIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WwwRoute,
} as any)
const AuthRegisterRoute = AuthRegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)
const DashboardProjectIdIndexRoute = DashboardProjectIdIndexRouteImport.update({
  id: '/$projectId/',
  path: '/$projectId/',
  getParentRoute: () => DashboardRoute,
} as any)

export interface FileRoutesByFullPath {
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof WwwIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$projectId': typeof DashboardProjectIdIndexRoute
}
export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof WwwIndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/$projectId': typeof DashboardProjectIdIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_www': typeof WwwRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_www/': typeof WwwIndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/$projectId/': typeof DashboardProjectIdIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/dashboard/'
    | '/dashboard/$projectId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/dashboard'
    | '/dashboard/$projectId'
  id:
    | '__root__'
    | '/_www'
    | '/auth'
    | '/dashboard'
    | '/auth/login'
    | '/auth/register'
    | '/_www/'
    | '/dashboard/'
    | '/dashboard/$projectId/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  WwwRoute: typeof WwwRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_www': {
      id: '/_www'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WwwRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
    '/_www/': {
      id: '/_www/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WwwIndexRouteImport
      parentRoute: typeof WwwRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterRouteImport
      parentRoute: typeof AuthRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof AuthRoute
    }
    '/dashboard/$projectId/': {
      id: '/dashboard/$projectId/'
      path: '/$projectId'
      fullPath: '/dashboard/$projectId'
      preLoaderRoute: typeof DashboardProjectIdIndexRouteImport
      parentRoute: typeof DashboardRoute
    }
  }
}

interface WwwRouteChildren {
  WwwIndexRoute: typeof WwwIndexRoute
}

const WwwRouteChildren: WwwRouteChildren = {
  WwwIndexRoute: WwwIndexRoute,
}

const WwwRouteWithChildren = WwwRoute._addFileChildren(WwwRouteChildren)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DashboardRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardProjectIdIndexRoute: typeof DashboardProjectIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardProjectIdIndexRoute: DashboardProjectIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  WwwRoute: WwwRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

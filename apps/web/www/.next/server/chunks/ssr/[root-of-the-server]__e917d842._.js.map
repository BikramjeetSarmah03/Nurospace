{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TRITHANKA/OneDrive/Desktop/Project_Work/Nurospace/apps/web/www/src/components/mvpblocks/waitlist.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/web/www/src/components/mvpblocks/waitlist.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/web/www/src/components/mvpblocks/waitlist.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsT,GACnV,oFACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TRITHANKA/OneDrive/Desktop/Project_Work/Nurospace/apps/web/www/src/components/mvpblocks/waitlist.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/apps/web/www/src/components/mvpblocks/waitlist.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/apps/web/www/src/components/mvpblocks/waitlist.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TRITHANKA/OneDrive/Desktop/Project_Work/Nurospace/apps/web/www/src/lib/supabase/server.ts"],"sourcesContent":["import { createServerClient } from \"@supabase/ssr\";\r\nimport type { cookies } from \"next/headers\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\r\nconst supabaseKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\r\n\r\nexport const createClient = (cookieStore: ReturnType<typeof cookies>) => {\r\n  return createServerClient(supabaseUrl!, supabaseKey!, {\r\n    cookies: {\r\n      getAll() {\r\n        return cookieStore.then((data) => data.getAll());\r\n      },\r\n      setAll(cookiesToSet) {\r\n        try {\r\n          cookiesToSet.forEach(({ name, value, options }) =>\r\n            cookieStore.then((data) => data.set(name, value, options)),\r\n          );\r\n        } catch {\r\n          // The `setAll` method was called from a Server Component.\r\n          // This can be ignored if you have middleware refreshing\r\n          // user sessions.\r\n        }\r\n      },\r\n    },\r\n  });\r\n};\r\n"],"names":[],"mappings":";;;AAAA;AAAA;;AAGA,MAAM,cAAc,QAAQ,GAAG,CAAC,wBAAwB;AACxD,MAAM,cAAc,QAAQ,GAAG,CAAC,6BAA6B;AAEtD,MAAM,eAAe,CAAC;IAC3B,OAAO,CAAA,GAAA,yKAAA,CAAA,qBAAkB,AAAD,EAAE,aAAc,aAAc;QACpD,SAAS;YACP;gBACE,OAAO,YAAY,IAAI,CAAC,CAAC,OAAS,KAAK,MAAM;YAC/C;YACA,QAAO,YAAY;gBACjB,IAAI;oBACF,aAAa,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,GAC5C,YAAY,IAAI,CAAC,CAAC,OAAS,KAAK,GAAG,CAAC,MAAM,OAAO;gBAErD,EAAE,OAAM;gBACN,0DAA0D;gBAC1D,wDAAwD;gBACxD,iBAAiB;gBACnB;YACF;QACF;IACF;AACF","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/TRITHANKA/OneDrive/Desktop/Project_Work/Nurospace/apps/web/www/src/app/page.tsx"],"sourcesContent":["import WaitlistPage from \"@/components/mvpblocks/waitlist\";\r\nimport { createClient } from \"@/lib/supabase/server\";\r\nimport { cookies } from \"next/headers\";\r\n\r\nexport default async function Home() {\r\n  const supabase = createClient(cookies());\r\n\r\n  // 1. Fetch total count from waitlist\r\n  const { count } = await supabase\r\n    .from(\"waitlist\")\r\n    .select(\"*\", { count: \"exact\" });\r\n\r\n  return <WaitlistPage count={count} />;\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,eAAe;IAC5B,MAAM,WAAW,CAAA,GAAA,sJAAA,CAAA,eAAY,AAAD,EAAE,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAEpC,qCAAqC;IACrC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,SACrB,IAAI,CAAC,YACL,MAAM,CAAC,KAAK;QAAE,OAAO;IAAQ;IAEhC,qBAAO,8OAAC,iKAAA,CAAA,UAAY;QAAC,OAAO;;;;;;AAC9B","debugId":null}}]
}